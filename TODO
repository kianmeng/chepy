Fix:

Code:
  ☐ add more examples in docstrings
  ☐ Luhn validator https://guptaavi352.medium.com/ctflearn-writeups-9f247c2fe94c

New ideas:
  ☐ rubber ducky encode/decode
  ☐ save registers https://t.co/pBNRufibY8?amp=1 
  ☐ cbor encode/decode https://github.com/agronholm/cbor2 (plugin)
  ☐ fuzzy search
  ☐ pgp, generate, encrypt, decrypt, verify
  ☐ swap little and big endian
  ☐ ignore error method
  ☐ swap bytes
  ☐ @high disable plugins from code
  ☐ homophonic decoder
  ☐ append method for core to add data to the state
  ☐ qr create 
  ☐ random from state
  ☐ ascii shift cipher kqfl ? snyjHYK"8fwymdxf~xdm8qq5$ = niteCTF{3arth_says_h3ll0} somewhat
  ☐ ✨ affine bruteforce
  ☐ ✨ zero-width encode
  ☐ ✨ hill cipher encode/decode/brute
  ☐ 💡 maybe a decorator function to convert all inputs into bytes when possible? this will allow for a consistent bytes approach to all functions
  ☐ ✨ amf encode/decode
  ☐ ✨ aes cmac
  ☐ ✨ whitespace encoding https://www.dcode.fr/whitespace-language
  ☐ 🐙 diff show results only
  ☐ ✨ brainfuck encoder/decoder
  ☐ ✨ spoon encoder/decoder

Bug:

Extras:
  ☐ xor two files

Cli:
  ☐ optionally show output window in a split screen window
  ☐ lower the chepy prompt lower. that empty space is not being used
  ☐ write to file with prompt toolkit path autocomplete
  ☐ pipe input to chepy

Enhance:

Plugins:

Methods:
  ☐ magic method from cyberchef
  ☐ base 92

Github Actions:

Distribution:
  ☐ request to add to kali
  ☐ request to add to brew

Misc:
  ☐ cyberchef recipe to chepy recipe converter

Archive:
  ✔ 🐙 update ascii in xor function to documentation
  ✔ 🐛 search with bytes is erroring
  ✔ ✨ base62
  ✔ ✨ callback function that can take a python function and run it over state. handle recipes for this
  ✔ ✨ automatic delimiter detect
  ✔ ✨ rabbit encryption
  ✔ ✨ cetacean encode/decode
  ✔ ✨ huffman encode/decode
  ✔ ✨ new plugin that can help detect encoding type trained on random data
  ✔ ✨ bifd
